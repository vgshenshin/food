{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACnH8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,eAAe,UAAU,MAAM,SAAS;AACxC,sCAAsC,cAAc;AACpD,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+DAAW;AACZ,yEAAyE;AACzE,kBAAkB,iCAAiC,mBAAmB;AACtE,uFAAuF;AACvF,IAAI;AACJ,GAAG;AACH;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACxD0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oDAAoD;AACpD,6CAA6C;AAC7C,0CAA0C;AAC1C;AACA;AACA,0DAA0D;AAC1D,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,8CAA8C;AAC9C,4CAA4C;AAC5C;AACA,yEAAyE;AACzE;AACA;AACA,sEAAsE;AACtE;AACA,0CAA0C;AAC1C;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,6CAA6C;AAC7C,4BAA4B;AAC5B;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,YAAY;AACZ;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI,4DAAQ;AACZ;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,6DAA6D;AAC7D,6DAA6D;AAC7D,6DAA6D;AAC7D,6DAA6D;AAC7D,6DAA6D;AAC7D,aAAa,gDAAgD;AAC7D,6DAA6D;AAC7D;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,sEAAsE;AACtE,GAAG,iDAAS,gFAAgF;AAC5F;AACA,sEAAsE;AACtE,sEAAsE;AACtE;AACA;AACA;AACA,iDAAiD;AACjD,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,wDAAwD;AACxD,wDAAwD;AACxD,wDAAwD;AACxD,IAAI,kDAAU,0CAA0C;AACxD,IAAI;AACJ;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC/JpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACF;;;;;;;;;;;;;;;ACtDnB,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,2DAA2D;AAC3D;AACA,2DAA2D;AAC3D;AACA,2DAA2D;AAC3D,0BAA0B,cAAc;AACxC,GAAG;AACH;AACA;AACA;AACA,0DAA0D;AAC1D,uDAAuD;AACvD,oDAAoD;AACpD;AACA;AACA,uDAAuD;AACvD,oDAAoD;AACpD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA,mDAAmD;AACnD,6BAA6B,WAAW;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA,wDAAwD;AACxD;AACA,2DAA2D;AAC3D,0BAA0B,cAAc;AACxC,4BAA4B,WAAW;AACvC,GAAG;AACH;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D;AACA,2DAA2D;AAC3D;AACA,2DAA2D;AAC3D,yBAAyB,WAAW,oBAAoB;AACxD,EAAE;AACF;AACA;AACA;AACA,4DAA4D;AAC5D,yDAAyD;AACzD,IAAI;AACJ,yDAAyD;AACzD;AACA,+CAA+C,OAAO,OAAO;AAC7D;AACA,6DAA6D;AAC7D;AACA,IAAI;AACJ;AACA;AACA;AACA,6DAA6D;AAC7D,6BAA6B,WAAW;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wDAAwD;AACxD,EAAE;AACF;AACA,6DAA6D;AAC7D,8DAA8D;AAC9D,2DAA2D;AAC3D,IAAI;AACJ,2DAA2D;AAC3D;AACA,+CAA+C,OAAO;AACtD;AACA,8DAA8D;AAC9D;AACA,IAAI;AACJ;AACA;AACA;AACA,8DAA8D;AAC9D,6BAA6B,WAAW;AACxC,IAAI;AACJ;AACA;AACA;AACA;AACA,wDAAwD;AACxD,wDAAwD;AACxD,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mDAAmD;AACnD,mDAAmD;AACnD;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA,+DAA+D;AAC/D,8BAA8B,WAAW;AACzC,KAAK;AACL;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,GAAG;AACH,EAAE;AACF;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC9LrB;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D,2DAA2D;AAC3D,SAAS;AACT;AACA,4DAA4D;AAC5D,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA,sCAAsC;AACtC,sDAAsD;AACtD,sDAAsD;AACtD,6CAA6C;AAC7C;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA,oDAAoD;AACpD,oDAAoD;AACpD;AACA,0EAA0E;AAC1E,sEAAsE;AACtE,sEAAsE;AACtE,sEAAsE;AACtE,sEAAsE;AACtE;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACzCnB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,+DAA+D;AAC/D;AACA,2DAA2D;AAC3D;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,gCAAgC;AAChC,cAAc,IAAI,WAAW;AAC7B,IAAI,4BAA4B;AAChC,6BAA6B;AAC7B;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,mBAAmB;AACnB;AACA;AACA,wCAAwC;AACxC;AACA;AACA,sCAAsC;AACtC,4CAA4C;AAC5C,4CAA4C;AAC5C,4CAA4C;AAC5C;AACA,0BAA0B;AAC1B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AClEpB;AACA;AACA,sDAAsD;AACtD;AACA,sDAAsD;AACtD;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,2CAA2C,IAAI,YAAY,WAAW,MAAM;AAC5E;AACA,0CAA0C;AAC1C;AACA;AACkB;;;;;;;UC3BlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACkC;AACE;AACA;AACF;AACE;AACE;AACF;AACM;AAC1C;AACA;AACA;AACA,uCAAuC,yDAAS,mCAAmC;AACnF;AACA;AACA,CAAC,yDAAI;AACL,CAAC,0DAAK;AACN,CAAC,0DAAK;AACN,CAAC,yDAAI;AACL,CAAC,0DAAK;AACN,CAAC,2DAAM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC,0DAAK;AACN;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n\t//  Calc\r\n\r\n\tconst result = document.querySelector('.calculating__result span');\r\n\r\n\tlet gender = 'female', \r\n\t\theight, weight, age, \r\n\t\tratio = 1.375;\r\n\r\n\tif (localStorage.getItem('gender')) {\r\n\t\tgender = localStorage.getItem('gender');\r\n\t} else {\r\n\t\tgender = 'female';\r\n\t\tlocalStorage.setItem('gender', 'female');\r\n\t}\r\n\r\n\tif (localStorage.getItem('ratio')) {\r\n\t\tratio = localStorage.getItem('ratio');\r\n\t} else {\r\n\t\tratio = 1.375;\r\n\t\tlocalStorage.setItem('ratio', 1.375);\r\n\t}\r\n\r\n\tfunction initLocalSettings(selector, activeClass) {\r\n\t\tconst elements = document.querySelectorAll(selector);\r\n\r\n\t\telements.forEach(elem => {\r\n\t\t\telem.classList.remove(activeClass);\r\n\t\t\r\n\r\n\t\t\tif (elem.getAttribute('id') === localStorage.getItem('gender')) {\r\n\t\t\t\telem.classList.add(activeClass);\r\n\t\t\t}\r\n\t\t\tif (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n\t\t\t\telem.classList.add(activeClass);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinitLocalSettings('#gender div', 'calculating__choose-item_active');\r\n\tinitLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n\tfunction getToCalc() {\r\n\t\tif (!gender || !height || !weight || !age || !ratio) {\r\n\t\t\tresult.textContent = '____';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (gender == 'female') {\r\n\t\t\tresult.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n\t\t} else {\r\n\t\t\tresult.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n\t\t}\r\n\t}\r\n\r\n\tgetToCalc();\r\n\r\n\tfunction changeDataParameter(selector, activeClass) {\r\n\t\tconst wrapper = document.querySelectorAll(selector);\r\n\t\twrapper.forEach(item => {\r\n\t\t\titem.addEventListener('click', (e) => {\r\n\r\n\t\t\t\twrapper.forEach(item => {\r\n\t\t\t\t\titem.classList.remove(activeClass);\r\n\t\t\t\t});\r\n\t\t\t\te.target.classList.add(activeClass);\r\n\r\n\t\t\t\tif (e.target.getAttribute('data-ratio')) {\r\n\t\t\t\t\tratio = +e.target.getAttribute('data-ratio');\r\n\t\t\t\t\tlocalStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgender = e.target.getAttribute('id');\r\n\t\t\t\t\tlocalStorage.setItem('gender', e.target.getAttribute('id'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetToCalc();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tchangeDataParameter('#gender div', 'calculating__choose-item_active');\r\n\tchangeDataParameter('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\tfunction changeInputParameter(selector) {\r\n\t\tconst input = document.querySelector(selector);\r\n\r\n\t\t\tinput.addEventListener('input', () => {\r\n\r\n\t\t\t\tif (input.value.match(/\\D/g)) {\r\n\t\t\t\t\tinput.style.boxShadow = '0 4px 15px rgb(255 0 0 / 50%)';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinput.style.boxShadow = '';\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (input.getAttribute('id')) {\r\n\t\t\t\t\tcase 'height':\r\n\t\t\t\t\t\theight = +input.value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'weight':\r\n\t\t\t\t\t\tweight = +input.value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'age':\r\n\t\t\t\t\t\tage = +input.value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\tgetToCalc();\r\n\t\t\t});\r\n\t}\r\n\r\n\tchangeInputParameter('#height');\r\n\tchangeInputParameter('#weight');\r\n\tchangeInputParameter('#age');\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n\t// Используем классы для карточек\r\n\r\n\tclass MenuCard {\r\n\t\tconstructor(src, alt, subtitle, descr, price, parentSelector, ...classes) {\r\n\t\t\tthis.src = src;\r\n\t\t\tthis.alt = alt;\r\n\t\t\tthis.subtitle = subtitle;\r\n\t\t\tthis.descr = descr;\r\n\t\t\tthis.price = price;\r\n\t\t\tthis.classes = classes;\r\n\t\t\tthis.convert = 75;\r\n\t\t\tthis.parent = document.querySelector(parentSelector);\r\n\t\t\tthis.convertRub();\r\n\t\t}\r\n\r\n\t\tconvertRub() {\r\n\t\t\tthis.price = this.price * this.convert;\r\n\t\t}\r\n\r\n\t\trenderCard() {\r\n\t\t\tconst div = document.createElement('div');\r\n\t\t\tif (this.classes.length === 0) {\r\n\t\t\t\tthis.classes = 'menu__item';\r\n\t\t\t\tdiv.classList.add(this.classes);\r\n\t\t\t} else {\r\n\t\t\t\tthis.classes.forEach(className => div.classList.add(className));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdiv.innerHTML = `\r\n\t\t\t\t<img src=${this.src} alt=${this.alt}>\r\n\t\t\t\t<h3 class=\"menu__item-subtitle\">${this.subtitle}</h3>\r\n\t\t\t\t<div class=\"menu__item-descr\">${this.descr}</div>\r\n\t\t\t\t<div class=\"menu__item-divider\"></div>\r\n\t\t\t\t<div class=\"menu__item-price\">\r\n\t\t\t\t\t<div class=\"menu__item-cost\">Цена:</div>\r\n\t\t\t\t\t<div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\r\n\t\t\tthis.parent.append(div);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tgetResource('http://localhost:3000/menu')\r\n\t\t.then(data => {                                                        //  обрабатываем промис пришедший от fetch\r\n\t\t\tdata.forEach(({img, altimg, title, descr, price}) => {             //  применяем деструктуризацию объекта с данными карточек\r\n\t\t\t\tnew MenuCard(img, altimg, title, descr, price, '.menu .container').renderCard();   //  рендерим карточки на страницу\r\n\t\t\t});\r\n\t\t});\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n\t//  Forms - принимаем данные пользователя с формы обр связи\r\n\t\t// создаем в корне проекта файл для back-end'a - server.php\r\n\t\t// исп-ем для отправки объект XMLHttpRequest\r\n\t\t// пробуем для отправки данных 2 разных формата объект FormData и JSON\r\n\t\t// для отправки JSON в server.php необходимо добавить: $_POST = json_decode(file_get_contents(\"php://input\"), true);\r\n\r\n\t\tconst forms = document.querySelectorAll(formSelector);  //  получаем все формы обр связи\r\n\r\n\t\tconst message = {                  // сообщение для информирования пользователя о статусе отправки запроса\r\n\t\t\tloading: 'img/form/spinner.svg',              //  исп-ем картинку спиннер для отображения загрузки\r\n\t\t\tsuccess: 'Спасибо, скоро мы с вами свяжемся',\r\n\t\t\tfailure: 'Что то пошло не так...'\r\n\t\t};\r\n\r\n\t\t//  применяем ф-цию постинга данных из ФОС ко всем формам с помощью перебора форм\r\n\t\tforms.forEach(item => {\r\n\t\t\tbindPostData(item);\r\n\t\t});\r\n\r\n\r\n\t\tfunction bindPostData(form) {                     // ф-ция отвечает за постинг данных\r\n\t\t\tform.addEventListener('submit', (e) => {  //  submit срабатывает при отправке ФОС\r\n\t\t\t\te.preventDefault();                   //  отменяем перезагрузку стр при отправке\r\n\t\r\n\t\t\t\t//  помещаем на страницу статус отправки запроса на сервер в виде картинки (для наглядного представления пользовотелю) \r\n\t\t\t\tconst statusMessage = document.createElement('img');  //  создаем тег img\r\n\t\t\t\tstatusMessage.src = message.loading;                  //  подставляем атрибут src со ссылкой на картинку из объекта message\r\n\t\t\t\tstatusMessage.style.cssText =                         //  установим css стили к спиннеру\r\n\t\t\t\t`\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\tmargin: 0 auto;\r\n\t\t\t\t`;\r\n\t\t\t\t\r\n\t\t\t\tform.insertAdjacentElement('afterend', statusMessage);  //  и выводим под ФОС информируя пользователя о статусе отправки\r\n\r\n\t\t\t\t\r\n\t\t\t\t// const request = new XMLHttpRequest();  // это API, который предоставляет клиенту функциональность для обмена данными между клиентом и сервером\r\n\t\t\t\t// request.open('POST', 'server.php');  //  настраиваем - POST отправку на сервер, второй арг это путь к серверу\r\n\t\r\n\t\t\t\t// request.setRequestHeader('Content-type', 'multipart/form-data');  //  настройка заголовка для объекта FormData\r\n\t\t\t\t// связка XMLHttpRequest и FormData не работает с указанием заголовка, поэтому заголовок не пишем !!!\r\n\r\n\t\t\t\t// request.setRequestHeader('Content-type', 'application/json');  //  настройка заголовка для объекта JSON\r\n\t\r\n\t\t\t\tconst formData = new FormData(form);  // Объект FormData позволяет создать набор пар ключ/значение и передать их. На input'ах должен быть атрибут name!!!\r\n\r\n\t\t\t\tconst json = JSON.stringify(Object.fromEntries(formData.entries()));  // трнсформируем formData в JSON\r\n\r\n\t\t\t\t//  создаем объект и помещаем в него данные из formData чтобы потом трансформировать их в JSON\r\n\t\t\t\t// const object = {};\r\n\t\t\t\t// formData.forEach(function(value, key){\r\n\t\t\t\t//     object[key] = value;\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// const json = JSON.stringify(object);  //  трансформирует обычный объект в JSON\r\n\t\t\t\t// request.send(json);  //  отправляем к серверу Объект JSON через XMLHttpRequest()\r\n\r\n\t\t\t\t// request.send(formData);  //  отправляем к серверу Объект FormData через XMLHttpRequest()\r\n\r\n\t\t\t\t//-------------------------fetch API------------------------------------------------------------------\r\n\t\t\t\t// постим данные с ФОС на сервер с помощью fetch API\r\n\t\t\t\t// 1. В виде FormData\r\n\t\t\t\t// fetch('server.php', {           //  в файле server.php не забудь удалить строку с json_decode\r\n\t\t\t\t//     method: \"POST\",\r\n\t\t\t\t//     body: formData\r\n\t\t\t\t// })\r\n\t\t\t\t// .then(data => data.text())      //  трансформирует formData в текст чтобы вывести в консоль\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t//     console.log(data);\r\n\t\t\t\t//     showThanksModal(message.success);\r\n\t\t\t\t// }).catch(() => {\r\n\t\t\t\t//     showThanksModal(message.failure);\r\n\t\t\t\t// }).finally(() => {\r\n\t\t\t\t//     form.reset();\r\n\t\t\t\t//     statusMessage.remove();\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t\r\n\t\t\t\t// 2. В виде JSON\r\n\t\t\t\t// fetch('server.php', {           //  в файле server.php не забудь прописать строку с json_decode\r\n\t\t\t\t//     method: \"POST\",\r\n\t\t\t\t//     headers: {\r\n\t\t\t\t//         'Content-type': 'application/json'\r\n\t\t\t\t//     },\r\n\t\t\t\t//     body: json                  //  json - это переменная в к-ой хранятся данный с ФОС в JSON формате(стр.278-283) \r\n\t\t\t\t// })\r\n\t\t\t\t// .then(data => data.text())      //  трансформирует JSON в текст чтобы вывести в консоль\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t//     console.log(data);\r\n\t\t\t\t//     showThanksModal(message.success);\r\n\t\t\t\t// }).catch(() => {\r\n\t\t\t\t//     showThanksModal(message.failure);\r\n\t\t\t\t// }).finally(() => {\r\n\t\t\t\t//     form.reset();\r\n\t\t\t\t//     statusMessage.remove();\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// исп-ем ф-цию для оптимизации кода по работе с сервером\r\n\t\t\t\tpostData('http://localhost:3000/requests', json)        // из ф-ции вернется промис\r\n\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\tshowThanksModal(message.success);\r\n\t\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t\tshowThanksModal(message.failure);\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tform.reset();\r\n\t\t\t\t\t\tstatusMessage.remove();\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t//--------------------------------------------------------------------------------------------\r\n\r\n\t\t\t\t//  слушаем событие load от XMLHttpRequest()\r\n\t\t\t\t// request.addEventListener('load', () => {              //  отслеживаем конечную загрузку запроса\r\n\t\t\t\t//     if (request.status === 200) {                     //  если запрос прошел статус ОК(200)\r\n\t\t\t\t//         console.log(request.response);                //  выведем в консоль объект с данными из ФОС\r\n\t\t\t\t//         showThanksModal(message.success);             //  вызываем ф-цию показа окна благодарности\r\n\t\t\t\t//         form.reset();                                 //  очистка ФОС от введенных данных\r\n\t\t\t\t//         statusMessage.remove();                       //  очищаем сообщ польз о загрузке (спиннер)\r\n\t\t\t\t//     } else {                                          //  негативный сценарий если запрос НЕ прошел статус ОК(200)\r\n\t\t\t\t//         showThanksModal(message.failure);             //  вызываем ф-цию показа окна с сообщ польз о проблеме в отправке\r\n\t\t\t\t//     }\r\n\t\t\t\t// });\r\n\t\t\t});\r\n\t\t}\r\n\t\r\n\r\n\t\t//  создаем окно благодарности (после отправки данных)\r\n\r\n\t\tfunction showThanksModal(message) {\r\n\t\t\tconst prevModalDialog = document.querySelector('.modal__dialog');  //  получаем существующее мод окно в переменную\r\n\t\r\n\t\t\tprevModalDialog.classList.add('hide');                             //  скрывает предыдущий контент (ФОС, инпуты)\r\n\t\t\topenModal('.modal', modalTimerId);                                                       //  открывает мод окно\r\n\t\r\n\t\t\tconst thanksModal = document.createElement('div');                 //  создаем обертку\r\n\t\t\tthanksModal.classList.add('modal__dialog');                        //  присваиваем тот же класс что был у ФОС\r\n\t\t\tthanksModal.innerHTML =                                            //  вставляем контент: крестик для закрытия и сообщение\r\n\t\t\t`\r\n\t\t\t\t<div class=\"modal__content\">\r\n\t\t\t\t\t<div class=\"modal__close\" data-close>&times;</div>\r\n\t\t\t\t\t<div class=\"modal__title\">${message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\t\r\n\t\t\tdocument.querySelector('.modal').append(thanksModal);   //  получаем мод окно и сразу же вставляем в него контент\r\n\t\t\tsetTimeout(() => {                                      //  ф-ция для очистки мод окна через 4сек\r\n\t\t\t\tthanksModal.remove();                               //  удаляем контент с сообщением пользователю\r\n\t\t\t\tprevModalDialog.classList.add('show');              //  показываем предыдущий контент т.е. ФОС с инпуами\r\n\t\t\t\tprevModalDialog.classList.remove('hide');           //  удаляем класс скрытия ФОС примененный на 306 строке\r\n\t\t\t\tcloseModal('.modal');                               //  закрываем мод окно чтобы всё это обновление контента не видел пользователь\r\n\t\t\t}, 2000);\r\n\t\t}\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n\tconst modalWindow = document.querySelector(modalSelector);\r\n\r\n\tmodalWindow.classList.add('show');\r\n\tmodalWindow.classList.remove('hide');\r\n\tdocument.body.style.overflow = 'hidden';\r\n\r\n\tif (modalTimerId) {\r\n\t\tclearInterval(modalTimerId);  //  удаляем открытие окна через 50сек, если окно уже было открыто вручную\r\n\t}\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n\tconst modalWindow = document.querySelector(modalSelector);\r\n\r\n\tmodalWindow.classList.remove('show');\r\n\tmodalWindow.classList.add('hide');\r\n\tdocument.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n\t// Modal window\r\n\r\n\tconst btnModalOpen = document.querySelectorAll(triggerSelector),\r\n\t\t  modalWindow = document.querySelector(modalSelector);\r\n\r\n\tbtnModalOpen.forEach((elem) => {\r\n\t\telem.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n\t});\r\n\r\n\tmodalWindow.addEventListener('click', (e) => {\r\n\t\tif (e.target === modalWindow || e.target.getAttribute('data-close') == '') {\r\n\t\t\tcloseModal(modalSelector);\r\n\t\t}\r\n\t});\r\n\r\n\tdocument.addEventListener('keydown', (e) => {\r\n\t\tif (e.code === 'Escape' && modalWindow.classList.contains('show')) {\r\n\t\t\tcloseModal(modalSelector);\r\n\t\t}\r\n\t});\r\n\r\n\tfunction showModalByScroll() {\r\n\t\t//  проскроленная часть сайта + видимая сейчас часть сайта >= высоте всего сайта -1px\r\n\t\tif (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n\t\t\topenModal(modalSelector, modalTimerId);\r\n\t\t\twindow.removeEventListener('scroll', showModalByScroll);  //  удаляем обработчик события чтобы повторно не открывалось окно\r\n\t\t}\r\n\t}\r\n\r\n\twindow.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {openModal};\r\nexport {closeModal};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n\t// simple slider (lesson 92)\r\n\r\n\t// алгоритм работы по созданию слайдера\r\n\t// 1 - получить эл-ты\r\n\t// 2 - сделать индекс к-ый определяет текущий слайд, его будем исп-ть в числовом обозначении сверху и изменять\r\n\t// 3 - написание ф-ции к-ая будем заниматься показом слайдов. Будет две ф-ции)\r\n\t//     - показ какого то опред слайда\r\n\t//     - скрытие других, к-ых не видим (принимает индекс, по этому индексу показывает, а оставшиеся скрывает), и \r\n\t//       проверяет условие - когда дошли до конца => переходим на 1 слайд и наоборот\r\n\t// 4 - навешивание обраб событ на стрелки и если вправо то выполн ф-ция и показ след слайд и изменяет индекс +1 и наоборот\r\n\t// 5 - определяем кол-во слайдов и помещаем в графу общего кол-ва слайдов на стр\r\n\t// 6 - добавить ноль при нумерации\r\n/*\r\n\tconst slides = document.querySelectorAll('.offer__slide'),    //  получаем псевдомассив с контентом слайдов\r\n\t\t  prev = document.querySelector('.offer__slider-prev'),   //  стрелочка назад\r\n\t\t  next = document.querySelector('.offer__slider-next'),   //  стрелочка вперед\r\n\t\t  total = document.querySelector('#total'),               //  цифра общего кол-ва слайдов\r\n\t\t  current = document.querySelector('#current');           //  цифра текущего слайда\r\n\tlet slideIndex = 1;                                       //  индекс текущего слайда\r\n\r\n\tshowSlides(slideIndex);                                   // запускаем ф-цию показа и скрытия слайдов(арг - Индекс текущего слайда = 1)\r\n\r\n\tif (slides.length < 10) {                                 // условие для добавления 0, если общ кол-во слайдов меньше 10\r\n\t\ttotal.textContent = `0${slides.length}`;\r\n\t} else {\r\n\t\ttotal.textContent = slides.length;        \r\n\t}\r\n\r\n\tfunction showSlides(n) {                                 // ф-ция показа и скрытия слайдов(арг = Индекс текущего слайда)\r\n\t\tif (n > slides.length) {                             // условие: когда долистали до конца всех слайдов\r\n\t\t\tslideIndex = 1;                                  // присвоить Индексу текущего слайда 1, т.е. вернуть в начало\r\n\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\tif (n < 1) {                                         //  условие: когда долистали до начала всех слайдов\r\n\t\t\tslideIndex = slides.length;                      // присвоить Индексу текущего слайда число равное кол-ву слайдов в псевдомассиве, т.е. вернуть в конец\r\n\t\t}\r\n\r\n\t\tslides.forEach(item => item.classList.add('hide'));  //  скрываем все слайды\r\n\r\n\t\t//  когда индекс текущего слайда равен 1, ни одно условие не сработает и цифра 1 подставится ниже в индекс\r\n\t\tslides[slideIndex - 1].classList.remove('hide');\r\n\r\n\t\tif (slideIndex < 10) {                           // условие для добавления 0, если индекс текущего слайда меньше 10\r\n\t\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t\t} else {\r\n\t\t\tcurrent.textContent = slideIndex;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction plusSlides(n) {\r\n\t\tshowSlides(slideIndex += n);\r\n\t}\r\n\r\n\tprev.addEventListener('click', () => {\r\n\t\tplusSlides(-1);\r\n\t});\r\n\r\n\tnext.addEventListener('click', () => {\r\n\t\tplusSlides(1);\r\n\t});\r\n*/\r\n\r\n\t// hard slider - carousel (lesson 93)\r\n\t// в html добавить div обертку для слайдов\r\n\r\n\tconst slider = document.querySelector(container),   //  весь слайдер\r\n\t\t  slides = document.querySelectorAll(slide),                               //  получаем псевдомассив с контентом слайдов\r\n\t\t  prev = document.querySelector(prevArrow),                              //  стрелочка назад\r\n\t\t  next = document.querySelector(nextArrow),                              //  стрелочка вперед\r\n\t\t  total = document.querySelector(totalCounter),                                          //  цифра общего кол-ва слайдов\r\n\t\t  current = document.querySelector(currentCounter),                                      //  цифра текущего слайда\r\n\t\t  slidesWrapper = document.querySelector(wrapper),                  //  главная обертка слайдов - выступает в роли рамки для видимой части слайдов\r\n\t\t  slidesField = document.querySelector(field),                      //  доп.обертка слайдов в к-ой будут все слайды по горизонтали\r\n\t\t  slideWidth = +window.getComputedStyle(slidesWrapper).width.replace(/\\D/g, \"\");\t //  ширина обертки (рамка чрз к-ую смотрим на слайды)\r\n\t\t  //  это computed св-ва CSS т.е. из браузера, вытаскиваем из них width (ширину) и т.к. величина в px, с помощью replace сохр в переменную только цифры, + изменяет строку в число\r\n\tlet slideIndex = 1,                                       //  индекс текущего слайда\r\n\t\toffset = 0;                                           //  отступ, на сколько % сдвинулась доп.обертка со слайдами\r\n\r\n\tif (slides.length < 10) {                                 // условие для добавления 0, если общ кол-во слайдов меньше 10\r\n\t\ttotal.textContent = `0${slides.length}`;\r\n\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t} else {\r\n\t\ttotal.textContent = slides.length;\r\n\t\tcurrent.textContent = slideIndex;     \r\n\t}\r\n\r\n\tslidesField.style.width = 100 * slides.length + '%';      //  делаем ширину доп.обертки 400%, т.е. зависит от кол-ва слайдов\r\n\tslidesField.style.display = 'flex';                       //  помещаем слайды в эту доп.обертку гориз-но др за др\r\n\tslidesField.style.transition = '0.5s all';                //  для плавного пролистывания слайдов\r\n\r\n\tslidesWrapper.style.overflow = 'hidden';                  //  ограничиваем видимость рамки, чтобы слайды видны были только внутри рамки\r\n\r\n\tslides.forEach(slide => {                                 //  устанавливаем слайдам одинаковую ширину\r\n\t\tslide.style.width = `${slideWidth}px`;                //  берем за основу ширину рамки чрз к-ую будут видны слайды\r\n\t});\r\n\r\n\r\n\tnext.addEventListener('click', () => {\r\n\t\tif (offset == slideWidth * (slides.length - 1)) {         //  если отступ равен ширине 1ого слайда*на кол-во слайдов-1, т.е. последний слайд в рамке\r\n\t\t\toffset = 0;                                           //  то переставляем отступ в 0, т.е. в начало всех слайдов\r\n\t\t} else {\r\n\t\t\toffset += slideWidth;                                 //  если не последний слайд то прибавляем к отступу ширину слайда и слайд будет смещаться\r\n\t\t}\r\n\t\tslidesField.style.transform = `translateX(-${offset}px)`;  //  сдвигает доп.обертку со слайдами влево\r\n\r\n\t\tif (slideIndex == slides.length) {                         //  условие для добавления единицы к индексу текущего слайда\r\n\t\t\tslideIndex = 1;\r\n\t\t} else {\r\n\t\t\tslideIndex++;\r\n\t\t}\r\n\r\n\t\tif (slideIndex < 10) {                                     //  условие для добавления 0, если индекс текущего слайда меньше 10\r\n\t\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t\t} else {\r\n\t\t\tcurrent.textContent = slideIndex;\r\n\t\t}\r\n\r\n\t\t// dots for carousel\r\n\t\tdotsArr.forEach(dot => dot.style.opacity = '.5');     //  перебираем все точки в массиве и назначаем им прозрачность 0.5\r\n\t\tdotsArr[slideIndex - 1].style.opacity = 1;            //  та точка к-ая соответствует индекс текущего слайда - прозрачность 1 (активная)\r\n\t});\r\n\r\n\tprev.addEventListener('click', () => {                      //  при нажатии на кнопку prev проверяем\r\n\t\tif (offset == 0) {                                          //  если отступ равен 0, т.е. первый слайд в рамке\r\n\t\t\toffset = slideWidth * (slides.length - 1);              //  то переставляем отступ на последний слайд\r\n\t\t} else {\r\n\t\t\toffset -= slideWidth;                                   //  если не первый слайд, то минусуем у отступа ширину слайда и слайд будет смещаться\r\n\t\t}\r\n\t\tslidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\t\tif (slideIndex == 1) {                                      //  условие для уменьшения на единицу индекса текущего слайда\r\n\t\t\tslideIndex = slides.length;\r\n\t\t} else {\r\n\t\t\tslideIndex--;\r\n\t\t}\r\n\r\n\t\tif (slideIndex < 10) {                                      //  условие для добавления 0, если индекс текущего слайда меньше 10\r\n\t\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t\t} else {\r\n\t\t\tcurrent.textContent = slideIndex;\r\n\t\t}\r\n\r\n\t\t// dots for carousel\r\n\t\tdotsArr.forEach(dot => dot.style.opacity = '.5');     //  перебираем все точки в массиве и назначаем им прозрачность 0.5\r\n\t\tdotsArr[slideIndex - 1].style.opacity = 1;            //  та точка к-ая соответствует индекс текущего слайда - прозрачность 1 (активная)\r\n\t});\r\n\r\n\t// dots for carousel\r\n\r\n\tconst dotsArr = [];\r\n\r\n\tslider.style.position = 'relative';\r\n\r\n\tconst dots = document.createElement('ol');\r\n\t\t  dots.classList.add('carousel-indicators');\r\n\t\t  slider.append(dots);\r\n\r\n\tfor (let i = 0; i < slides.length; i++) {\r\n\t\tconst dot = document.createElement('li');        //  создаем точки слайдера\r\n\t\tdot.setAttribute('data-slide-to', i + 1);        //  уст-ем data атрибут всем точкам и присваиваем каждому data атрибуту цифру от 1 до 4 (кол-во слайдов)\r\n\t\tdot.classList.add('dot');\r\n\r\n\t\tif (i == 0) {\r\n\t\t\tdot.style.opacity = 1;                       //  уст-ем прозрачность первой точки в 1(когда цикл прошел вперый раз)\r\n\t\t}\r\n\t\tdots.append(dot);\r\n\t\tdotsArr.push(dot);                               //  пушим сформированную точку в массив\r\n\t}\r\n\r\n\tdotsArr.forEach(dot => {\r\n\t\tdot.addEventListener('click', (e) => {\r\n\t\t\tconst slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n\t\t\tslideIndex = slideTo;\r\n\t\t\toffset = slideWidth * (slideTo - 1);\r\n\t\t\tslidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n\t\t\tif (slideIndex < 10) {                                      //  условие для добавления 0, если индекс текущего слайда меньше 10\r\n\t\t\t\tcurrent.textContent = `0${slideIndex}`;\r\n\t\t\t} else {\r\n\t\t\t\tcurrent.textContent = slideIndex;\r\n\t\t\t}\r\n\r\n\t\t\tdotsArr.forEach(dot => dot.style.opacity = '.5');     //  перебираем все точки в массиве и назначаем им прозрачность 0.5\r\n\t\t\tdotsArr[slideIndex - 1].style.opacity = 1;            //  та точка к-ая соответствует индекс текущего слайда - прозрачность 1 (активная)\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // Tabs\r\n\r\n\tconst tabs = document.querySelectorAll(tabsSelector),   //селектор одиночного таба\r\n          tabsContent = document.querySelectorAll(tabsContentSelector),  //содержимое таба, контент\r\n          tabsParent = document.querySelector(tabsParentSelector);  //родитель табов\r\n\r\n    function hideTabContent() {                            //функция на скрытие элементов\r\n        tabsContent.forEach(item => {                      // перебираем контент таба\r\n            item.classList.add('hide');                    //скрывает контент у каждого таба\r\n            item.classList.remove('show', 'fade');         // удаляем классы отображения и анимации\r\n        });\r\n\r\n        tabs.forEach(tab => {                               //перебираем каждый таб по отдельности\r\n            tab.classList.remove(activeClass); // и если на каком-то назначен класс активности, то убираем его.\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {  //функция показа. изначально активен тот, у к-ого индекс 0. т.е. 1ый эл-нт\r\n        tabsContent[i].classList.add('show', 'fade'); //контент таба с инд i, станет видимым\r\n        tabsContent[i].classList.remove('hide');      // удаляет класс скрытия контента с инд i\r\n        tabs[i].classList.add(activeClass);  // табу с инд i назначается класс активности\r\n    }\r\n\r\n    hideTabContent();  //  вызывает ф-цию скрытие элементов\r\n    showTabContent();  //  вызывает ф-цию показа эл-тов, но т.к. без аргумента - знач по умолч i = 0\r\n\r\n    tabsParent.addEventListener('click', (e) => {   // делегирование события, назначаем клик на родителя табов, листенер следит событием и записывает все в ивент\r\n        const target = e.target;                    // для удобства\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) { // если таргет эвента И таргет эвента совпадает с селектором tabheader__item (slice удалит .)\r\n            tabs.forEach((item, i) => {                               // то перебираем все элементы и их индексы\r\n                if (target == item) {                                 // если тот таб куда нажали совпал с элементом, к-ый перебираем \r\n                    hideTabContent();                                 // то скрываем всех(на случай если кто-то уже был активен)\r\n                    showTabContent(i);                                // и показываем только того, на кого кликнули.\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n\t// Timer\r\n\r\n\t// const deadline = '2022-12-31:00:00:00';  //  дата окончания \"акции\" - передаем это значение в вызове ф-ции в script.js\r\n\r\n\tfunction getTimeRemaining(endtime) {                          // функция по расчету промежутков\r\n\t\tlet days, hours, minutes, seconds;\r\n\t\tconst t = Date.parse(endtime) - Date.parse(new Date());  // создаем локальную переменную в к-ую методом Date.parse разбираем строковое значение и переводим его в милисекунды. от этих милисекунд отнимаем также переведенное в милисекунды ВРЕМЯ ДАТЫ ИЗ СИСТЕМЫ. получаем разницу к-ую и будет отсчитывать таймер\r\n\t\t\r\n\t\tif (t <= 0) {                   // условие если дата окончания \"акции\" меньше сегодняшней\r\n\t\t\tdays = 0;                   // назначить всем переменным 0\r\n\t\t\thours = 0;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t} else {\r\n\t\t\tdays = Math.floor(t / (1000 * 60 * 60 * 24)),  //  вычисляем дни. выводим разультат без остатка округляя ч/з math.floor. РАЗНИЦУ делим на произведение (1000мс *60с(кол-во мс в 1мин) *60м(кол-во мс в 1 часе) и *24 часа(кол-во мс в 1 сутках)). Разницу таймера в мс делим на мс в одних сутках и получаем СКОЛЬКО СУТОК ОСТАЛОСЬ ДО ОКОНЧАНИЕ НАШЕЙ ДАТЫ\r\n\t\t\thours = Math.floor(t / (1000 * 60 * 60) % 24),  // (общ разницу в мс делим на количество мс в одном часе) делим это % на 24 и % возвращает нам остаток от деления. (напр: 52ч % 24ч = 2сут. их отбрасываем, а 4ч в остатке записываем)\r\n\t\t\tminutes = Math.floor((t / (1000 * 60)) % 60),  // то же что и выше, только остаток от деления на 60 будет остаток минут\r\n\t\t\tseconds = Math.floor((t / 1000) % 60);         // то же что и выше, только остаток от деления на 60 будет остаток секунд\r\n\t\t}\r\n\t\t\r\n\t\treturn {        //ф-ция возвращает обьект в к-ом на основе расчетов получены отдельные данные\r\n\t\t\ttotal: t,\r\n\t\t\tdays: days,\r\n\t\t\thours: hours,\r\n\t\t\tminutes: minutes,\r\n\t\t\tseconds: seconds\r\n\t\t};\r\n\t}\r\n\r\n\tfunction getZero(num) {           // добавления нуля к числам до 10\r\n\t\tif (num >= 0 && num < 10) {   // сработает если число больше или равно нулю И меньше 10\r\n\t\t\treturn `0${num}`;         //возвращаем добавочный ноль и то число, к-ое было передано в арг\r\n\t\t} else {                      // если число больше 10\r\n\t\t\treturn num;               // просто возвращаем его без изменений\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setClock(selector, endtime) {         // ф-ция установки таймера на стр принимает 2 аргумента\r\n\t\tconst timer = document.querySelector(selector),  //получаем таймер. если их на странице будет несколько, то их селектор передается сюда первым арг\r\n\t\t\t  days = timer.querySelector('#days'),\r\n\t\t\t  hours = timer.querySelector('#hours'),\r\n\t\t\t  minutes = timer.querySelector('#minutes'),\r\n\t\t\t  seconds = timer.querySelector('#seconds'),\r\n\t\t\t  interval = setInterval(refreshClock, 1000); // с интервалом в 1сек будем запускать функцию updateClock. имитация стрелки часов\r\n\r\n\t\trefreshClock();  // запускается тут-для того, чтобы не было скачков цифр т.к. срабатывал интервал запуска через 1сек (начинает действовать с момента загрузки стр)\r\n\r\n\t\tfunction refreshClock() {\r\n\t\t\tconst t = getTimeRemaining(endtime); // записывает объект как результат работы функции \"по расчету промежутков времени\". теперь в t хранится обьект с уже полученными данными\r\n\r\n\t\t\t// закидываем всё это дело в верстку\r\n\t\t\tdays.innerHTML = getZero(t.days);  // в полученный по id #days тег переписывает значение из объекта, проверяя, надо ли подставлять ноль или нет\r\n\t\t\thours.innerHTML = getZero(t.hours);      // то же только часы\r\n\t\t\tminutes.innerHTML = getZero(t.minutes);  // то же только минуты\r\n\t\t\tseconds.innerHTML = getZero(t.seconds);  // то же только сек\r\n\r\n\t\t\tif (t.total <= 0) {    // проверяем св-во total у объекта от функции getTimeRemaining(), и если оно равняется нулю, значит таймер истек\r\n\t\t\t\tclearInterval(interval);  // очистка интервала и таймер останавливается\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetClock(id, deadline);  // запускаем функцию установки времени для определенного таймера. передаем первым аргументом тот таймер на сайте на к-ый нужно установить отсчет. а вторым аргументом сам дедлайн в формате строки\r\n}\r\n\r\nexport default timer;","//  ф-ция отвечающая за функционал сервера POST запросы\r\nconst postData = async (url, data) => {\r\n    const res = await fetch(url, {                    //  создается запрос к серверу (асинхронный код) поэтому применяем async/await\r\n        method: \"POST\",                               //  теперь переменная res будет ждать ответа (промиса) от fetch и только после этого\r\n        headers: {                                    //  в нее запишется результат запроса\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();                        //  тут промис трансформируется из JSON в объект\r\n};\r\n\r\n//  ф-ция отвечающая за функционал сервера GET запросы\r\n/*создается запрос к серверу (асинхронный код) поэтому применяем async/await\r\nтеперь переменная res будет ждать ответа (промиса) от fetch и только после этого\r\nв нее запишется результат запроса*/\r\nconst getResource = async (url) => {\r\n    const res = await fetch(url);              \r\n\r\n    if(!res.ok) {                              //  проверяем на ошибку в запросе с помощью св-в промиса\r\n        // создаем объект ошибки и throw - это выкинуть ее в консоль\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);   //  св-во status - статус к-ый вернул нам сервер(200, 404, 500 и др)\r\n    }\r\n    return await res.json();              //  тут промис трансформируется из JSON в объект\r\n};\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\n\r\n// импортируем ф-ции из модулей\r\n//  по стандарту ES6\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport slider from './modules/slider';\r\nimport forms from './modules/forms';\r\nimport {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n\tconst modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000);  //  через 50сек откр окно\r\n\r\n\t//  вызываем ф-ции\r\n\ttabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n\tmodal('[data-modal]', '.modal', modalTimerId);\r\n\ttimer('.timer', '2022-12-31:00:00:00');\r\n\tcalc();\r\n\tcards();\r\n\tslider({\r\n\t\tcontainer: '.offer__slider',\r\n\t\tnextArrow: '.offer__slider-next',\r\n\t\tprevArrow: '.offer__slider-prev',\r\n\t\tfield: '.offer__slider-inner',\r\n\t\tslide: '.offer__slide',\r\n\t\ttotalCounter: '#total',\r\n\t\twrapper: '.offer__slider-wrapper',\r\n\t\tcurrentCounter: '#current'\r\n\t});\r\n\tforms('form', modalTimerId);\r\n\t\r\n});"],"names":[],"sourceRoot":""}